version: "3"

services:
  nextjs:
    container_name: frontend
    hostname: nextjs
    build:
      context: ./frontend
      dockerfile: prod.Dockerfile
    restart: always
    ports:
      - 3000:3000
    networks:
      - net

  maven:
    depends_on:
      - db
    container_name: backend
    hostname: maven
    build:
      context: ./backend
      dockerfile: prod.Dockerfile
    restart: always
    ports:
      - 8080:8080
      # - $SPRING_LOCAL_PORT:$SPRING_DOCKER_PORT
    networks:
      - net

  db:
    container_name: mysql
    hostname: mysqldb
    image: mysql:8.0.33
    restart: always
    environment:
      MYSQL_DATABASE: apprenticeshipreporter
      MYSQL_USER: nado
      MYSQL_PASSWORD: lol
      MYSQL_ROOT_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - my-db:/var/lib/mysql
    networks:
      - net

  proxy:
    container_name: proxy
    image: "jc21/nginx-proxy-manager:latest"
    restart: always
    ports:
      - "80:80"
      - "81:81"
      - "443:443"
    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt
    networks:
      - net

  # mysql-workbench:
  #   image: lscr.io/linuxserver/mysql-workbench:8.0.29
  #   container_name: MySQL-Workbench
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=Europe/London
  #   volumes:
  #     - mysql-workbench-data:/config
  #   ports:
  #     - 5014:3000
  #   cap_add:
  #     - IPC_LOCK
  #   restart: unless-stopped
  #   networks:
  #     - net

volumes:
  # mysql-workbench-data:
  my-db:

networks:
  net:
    driver: bridge
