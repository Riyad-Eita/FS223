version: "3"

services:
  nextjs:
    container_name: frontend
    hostname: nextjs
    build:
      context: ./frontend
      dockerfile: prod.Dockerfile
    env_file:
      - stack.env
    restart: always
    ports:
      - 3000:3000

    networks:
      - apprenticeshipreporter

  maven:
    depends_on:
      - db
    container_name: backend
    hostname: maven
    build:
      context: ./backend
      dockerfile: prod.Dockerfile
    restart: always
    env_file:
      - stack.env
    ports:
      - 8080:8080
      # - $SPRING_LOCAL_PORT:$SPRING_DOCKER_PORT
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url": "jdbc:mysql://mysqldb:3306/apprenticeshipreporter?allowPublicKeyRetrieval=true&useSSL=false",
        "spring.datasource.username": "${MYSQL_USER}",
        "spring.datasource.password": "${MYSQL_PASSWORD}",
        "spring.jpa.properties.hibernate.dialect": "org.hibernate.dialect.MySQLDialect",
        "spring.jpa.hibernate.ddl-auto": "update"
        }'

    networks:
      - apprenticeshipreporter

  db:
    container_name: mysql
    hostname: mysqldb
    image: mysql:8.0.33
    restart: always
    env_file:
      - stack.env
    environment:
      MYSQL_DATABASE: $MYSQL_DATABASE
      MYSQL_USER: $MYSQL_USER
      MYSQL_PASSWORD: $MYSQL_PASSWORD
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
    ports:
      - "3306:3306"
    volumes:
      - my-db:/var/lib/mysql

    networks:
      - apprenticeshipreporter

volumes:
  my-db:

networks:
  apprenticeshipreporter:
